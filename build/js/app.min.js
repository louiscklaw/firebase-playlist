
var helloworld = 'helloworld';

const LOCAL_API_SERVER = 'http://localhost:5000/test-firebase-3a0f6/us-central1';

const API_SERVER = LOCAL_API_SERVER;

const API_PATH = `${API_SERVER}/main/api/jstest`;

const METHOD_POST = { method: 'POST' };
const METHOD_PUT = { method: 'PUT' };
const METHOD_DELETE = { method: 'DELETE' };
const HEADERS_JSON = { headers: { 'Content-Type': 'application/json' } };

function helloworld() {
  console.log( 'helloworld' );
}

const get_ele = ( sel_in ) => {
  return document.querySelector( sel_in )
};
const get_eles = ( sel_in ) => {
  return document.querySelectorAll( sel_in )
};

const prepare_get_request = ( endpoint ) => {
  return fetch( `${API_PATH}/${endpoint}` );
}

const prepare_put_request = ( endpoint ) => {
  return fetch( `${API_PATH}/${endpoint}`, create_json_put_config() );
}

function create_json_put_config( json_in ) {
  return {
    ...METHOD_PUT,
    ...HEADERS_JSON,
    body: JSON.stringify( json_in )
  };
}

function create_json_post_config( json_in ) {
  return {
    ...METHOD_POST,
    ...HEADERS_JSON,
    body: JSON.stringify( json_in )
  };
}

function clickCreate() {
  fetch( `${API_PATH}/create_fight`, create_json_post_config( {
      winner: get_ele( '#create_winner' ).value,
      losser: get_ele( '#create_losser' ).value,
      title: get_ele( '#create_title' ).value
    } ) )
    .then( res => res.json() )
    .then( res_json => {
      get_ele( '#create_result' ).innerHTML = JSON.stringify( res_json );
    } )

}

function click_echo_get() {
  fetch( `${API_PATH}/echo_get?q=1234` )
    .then( res => res.text() )
    .then( res_text => {
      console.log( res_text )
      get_ele( '#echo_get' ).innerHTML = res_text;
    } )
}

function click_hello_get() {
  fetch( `${API_PATH}/hello_get` )
    .then( res => res.text() )
    .then( res_text => {
      console.log( res_text );
      get_ele( '#hello_get' ).innerHTML = res_text;
    } )
}

function click_list_all() {
  fetch( `${API_PATH}/fights` )
    .then( res => res.json() )
    .then( res_json => {
      get_ele( '#list_all_result' ).innerHTML = JSON.stringify( res_json );
    } )
}

function fetch_records() {
  return fetch( `${API_PATH}/fights` )
    .then( res => res.json() );
}

function prepareRecordList( ele_in ) {
  fetch_records()
    .then( res_json => {
      Object.keys( res_json ).forEach( _id => {
        var sel = ele_in;
        var opt1 = document.createElement( "option" );
        opt1.value = _id;
        opt1.text = _id;
        sel.add( opt1, null );
      } );

    } )
}

function loadRecord( id_in ) {
  return prepare_get_request( `/fight/${id_in}` )
    .then( res => res.json() )

}

function readRecord( id_in ) {
  prepare_get_request( `/fight/${id_in}` )
    .then( res => res.json() )
    .then( res_json => {
      get_ele( '#read_winner' ).value = res_json.value.winner;
      get_ele( '#read_losser' ).value = res_json.value.losser;
      get_ele( '#read_title' ).value = res_json.value.title;
    } )
}

function onUpdateSelectChange( ele_in ) {
  var id_to_load = ele_in.value;
  loadRecord( id_to_load )
    .then( res_json => {
      get_ele( '#update_winner' ).value = res_json.value.winner;
      get_ele( '#update_losser' ).value = res_json.value.losser;
      get_ele( '#update_title' ).value = res_json.value.title;
    } )
}

function updateRecord() {
  var id_to_update = get_ele( '#update_records_list' ).value;
  var fetch_url = `${API_PATH}/fights/${id_to_update}`;
  console.log( fetch_url );

  fetch( fetch_url, create_json_put_config( {
      // winner: get_ele( '#update_winner' ).value,
      // losser: get_ele( '#update_losser' ).value,
      title: get_ele( '#update_title' ).value
    } ) )
    .then( res => res.json() )
    .then( res_json => {
      get_ele( '#update_records' ).innerHTML = JSON.stringify( res_json );
    } )

}

function onReadSelectChange( ele_in ) {
  var id_to_read = ele_in.value;
  readRecord( id_to_read );
}

document.addEventListener( "DOMContentLoaded", function () {
  console.log( "helloworld" );

  prepareRecordList( get_ele( '#read_records_list' ) );
  prepareRecordList( get_ele( '#update_records_list' ) );
  prepareRecordList( get_ele( '#delete_records_list' ) );
} );
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl92YXJzLmpzIiwibWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGhlbGxvd29ybGQgPSAnaGVsbG93b3JsZCc7XG5cbmNvbnN0IExPQ0FMX0FQSV9TRVJWRVIgPSAnaHR0cDovL2xvY2FsaG9zdDo1MDAwL3Rlc3QtZmlyZWJhc2UtM2EwZjYvdXMtY2VudHJhbDEnO1xuXG5jb25zdCBBUElfU0VSVkVSID0gTE9DQUxfQVBJX1NFUlZFUjtcblxuY29uc3QgQVBJX1BBVEggPSBgJHtBUElfU0VSVkVSfS9tYWluL2FwaS9qc3Rlc3RgO1xuXG5jb25zdCBNRVRIT0RfUE9TVCA9IHsgbWV0aG9kOiAnUE9TVCcgfTtcbmNvbnN0IE1FVEhPRF9QVVQgPSB7IG1ldGhvZDogJ1BVVCcgfTtcbmNvbnN0IE1FVEhPRF9ERUxFVEUgPSB7IG1ldGhvZDogJ0RFTEVURScgfTtcbmNvbnN0IEhFQURFUlNfSlNPTiA9IHsgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0gfTtcbiIsImZ1bmN0aW9uIGhlbGxvd29ybGQoKSB7XG4gIGNvbnNvbGUubG9nKCAnaGVsbG93b3JsZCcgKTtcbn1cblxuY29uc3QgZ2V0X2VsZSA9ICggc2VsX2luICkgPT4ge1xuICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvciggc2VsX2luIClcbn07XG5jb25zdCBnZXRfZWxlcyA9ICggc2VsX2luICkgPT4ge1xuICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCggc2VsX2luIClcbn07XG5cbmNvbnN0IHByZXBhcmVfZ2V0X3JlcXVlc3QgPSAoIGVuZHBvaW50ICkgPT4ge1xuICByZXR1cm4gZmV0Y2goIGAke0FQSV9QQVRIfS8ke2VuZHBvaW50fWAgKTtcbn1cblxuY29uc3QgcHJlcGFyZV9wdXRfcmVxdWVzdCA9ICggZW5kcG9pbnQgKSA9PiB7XG4gIHJldHVybiBmZXRjaCggYCR7QVBJX1BBVEh9LyR7ZW5kcG9pbnR9YCwgY3JlYXRlX2pzb25fcHV0X2NvbmZpZygpICk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZV9qc29uX3B1dF9jb25maWcoIGpzb25faW4gKSB7XG4gIHJldHVybiB7XG4gICAgLi4uTUVUSE9EX1BVVCxcbiAgICAuLi5IRUFERVJTX0pTT04sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoIGpzb25faW4gKVxuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVfanNvbl9wb3N0X2NvbmZpZygganNvbl9pbiApIHtcbiAgcmV0dXJuIHtcbiAgICAuLi5NRVRIT0RfUE9TVCxcbiAgICAuLi5IRUFERVJTX0pTT04sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoIGpzb25faW4gKVxuICB9O1xufVxuXG5mdW5jdGlvbiBjbGlja0NyZWF0ZSgpIHtcbiAgZmV0Y2goIGAke0FQSV9QQVRIfS9jcmVhdGVfZmlnaHRgLCBjcmVhdGVfanNvbl9wb3N0X2NvbmZpZygge1xuICAgICAgd2lubmVyOiBnZXRfZWxlKCAnI2NyZWF0ZV93aW5uZXInICkudmFsdWUsXG4gICAgICBsb3NzZXI6IGdldF9lbGUoICcjY3JlYXRlX2xvc3NlcicgKS52YWx1ZSxcbiAgICAgIHRpdGxlOiBnZXRfZWxlKCAnI2NyZWF0ZV90aXRsZScgKS52YWx1ZVxuICAgIH0gKSApXG4gICAgLnRoZW4oIHJlcyA9PiByZXMuanNvbigpIClcbiAgICAudGhlbiggcmVzX2pzb24gPT4ge1xuICAgICAgZ2V0X2VsZSggJyNjcmVhdGVfcmVzdWx0JyApLmlubmVySFRNTCA9IEpTT04uc3RyaW5naWZ5KCByZXNfanNvbiApO1xuICAgIH0gKVxuXG59XG5cbmZ1bmN0aW9uIGNsaWNrX2VjaG9fZ2V0KCkge1xuICBmZXRjaCggYCR7QVBJX1BBVEh9L2VjaG9fZ2V0P3E9MTIzNGAgKVxuICAgIC50aGVuKCByZXMgPT4gcmVzLnRleHQoKSApXG4gICAgLnRoZW4oIHJlc190ZXh0ID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCByZXNfdGV4dCApXG4gICAgICBnZXRfZWxlKCAnI2VjaG9fZ2V0JyApLmlubmVySFRNTCA9IHJlc190ZXh0O1xuICAgIH0gKVxufVxuXG5mdW5jdGlvbiBjbGlja19oZWxsb19nZXQoKSB7XG4gIGZldGNoKCBgJHtBUElfUEFUSH0vaGVsbG9fZ2V0YCApXG4gICAgLnRoZW4oIHJlcyA9PiByZXMudGV4dCgpIClcbiAgICAudGhlbiggcmVzX3RleHQgPT4ge1xuICAgICAgY29uc29sZS5sb2coIHJlc190ZXh0ICk7XG4gICAgICBnZXRfZWxlKCAnI2hlbGxvX2dldCcgKS5pbm5lckhUTUwgPSByZXNfdGV4dDtcbiAgICB9IClcbn1cblxuZnVuY3Rpb24gY2xpY2tfbGlzdF9hbGwoKSB7XG4gIGZldGNoKCBgJHtBUElfUEFUSH0vZmlnaHRzYCApXG4gICAgLnRoZW4oIHJlcyA9PiByZXMuanNvbigpIClcbiAgICAudGhlbiggcmVzX2pzb24gPT4ge1xuICAgICAgZ2V0X2VsZSggJyNsaXN0X2FsbF9yZXN1bHQnICkuaW5uZXJIVE1MID0gSlNPTi5zdHJpbmdpZnkoIHJlc19qc29uICk7XG4gICAgfSApXG59XG5cbmZ1bmN0aW9uIGZldGNoX3JlY29yZHMoKSB7XG4gIHJldHVybiBmZXRjaCggYCR7QVBJX1BBVEh9L2ZpZ2h0c2AgKVxuICAgIC50aGVuKCByZXMgPT4gcmVzLmpzb24oKSApO1xufVxuXG5mdW5jdGlvbiBwcmVwYXJlUmVjb3JkTGlzdCggZWxlX2luICkge1xuICBmZXRjaF9yZWNvcmRzKClcbiAgICAudGhlbiggcmVzX2pzb24gPT4ge1xuICAgICAgT2JqZWN0LmtleXMoIHJlc19qc29uICkuZm9yRWFjaCggX2lkID0+IHtcbiAgICAgICAgdmFyIHNlbCA9IGVsZV9pbjtcbiAgICAgICAgdmFyIG9wdDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcIm9wdGlvblwiICk7XG4gICAgICAgIG9wdDEudmFsdWUgPSBfaWQ7XG4gICAgICAgIG9wdDEudGV4dCA9IF9pZDtcbiAgICAgICAgc2VsLmFkZCggb3B0MSwgbnVsbCApO1xuICAgICAgfSApO1xuXG4gICAgfSApXG59XG5cbmZ1bmN0aW9uIGxvYWRSZWNvcmQoIGlkX2luICkge1xuICByZXR1cm4gcHJlcGFyZV9nZXRfcmVxdWVzdCggYC9maWdodC8ke2lkX2lufWAgKVxuICAgIC50aGVuKCByZXMgPT4gcmVzLmpzb24oKSApXG5cbn1cblxuZnVuY3Rpb24gcmVhZFJlY29yZCggaWRfaW4gKSB7XG4gIHByZXBhcmVfZ2V0X3JlcXVlc3QoIGAvZmlnaHQvJHtpZF9pbn1gIClcbiAgICAudGhlbiggcmVzID0+IHJlcy5qc29uKCkgKVxuICAgIC50aGVuKCByZXNfanNvbiA9PiB7XG4gICAgICBnZXRfZWxlKCAnI3JlYWRfd2lubmVyJyApLnZhbHVlID0gcmVzX2pzb24udmFsdWUud2lubmVyO1xuICAgICAgZ2V0X2VsZSggJyNyZWFkX2xvc3NlcicgKS52YWx1ZSA9IHJlc19qc29uLnZhbHVlLmxvc3NlcjtcbiAgICAgIGdldF9lbGUoICcjcmVhZF90aXRsZScgKS52YWx1ZSA9IHJlc19qc29uLnZhbHVlLnRpdGxlO1xuICAgIH0gKVxufVxuXG5mdW5jdGlvbiBvblVwZGF0ZVNlbGVjdENoYW5nZSggZWxlX2luICkge1xuICB2YXIgaWRfdG9fbG9hZCA9IGVsZV9pbi52YWx1ZTtcbiAgbG9hZFJlY29yZCggaWRfdG9fbG9hZCApXG4gICAgLnRoZW4oIHJlc19qc29uID0+IHtcbiAgICAgIGdldF9lbGUoICcjdXBkYXRlX3dpbm5lcicgKS52YWx1ZSA9IHJlc19qc29uLnZhbHVlLndpbm5lcjtcbiAgICAgIGdldF9lbGUoICcjdXBkYXRlX2xvc3NlcicgKS52YWx1ZSA9IHJlc19qc29uLnZhbHVlLmxvc3NlcjtcbiAgICAgIGdldF9lbGUoICcjdXBkYXRlX3RpdGxlJyApLnZhbHVlID0gcmVzX2pzb24udmFsdWUudGl0bGU7XG4gICAgfSApXG59XG5cbmZ1bmN0aW9uIHVwZGF0ZVJlY29yZCgpIHtcbiAgdmFyIGlkX3RvX3VwZGF0ZSA9IGdldF9lbGUoICcjdXBkYXRlX3JlY29yZHNfbGlzdCcgKS52YWx1ZTtcbiAgdmFyIGZldGNoX3VybCA9IGAke0FQSV9QQVRIfS9maWdodHMvJHtpZF90b191cGRhdGV9YDtcbiAgY29uc29sZS5sb2coIGZldGNoX3VybCApO1xuXG4gIGZldGNoKCBmZXRjaF91cmwsIGNyZWF0ZV9qc29uX3B1dF9jb25maWcoIHtcbiAgICAgIC8vIHdpbm5lcjogZ2V0X2VsZSggJyN1cGRhdGVfd2lubmVyJyApLnZhbHVlLFxuICAgICAgLy8gbG9zc2VyOiBnZXRfZWxlKCAnI3VwZGF0ZV9sb3NzZXInICkudmFsdWUsXG4gICAgICB0aXRsZTogZ2V0X2VsZSggJyN1cGRhdGVfdGl0bGUnICkudmFsdWVcbiAgICB9ICkgKVxuICAgIC50aGVuKCByZXMgPT4gcmVzLmpzb24oKSApXG4gICAgLnRoZW4oIHJlc19qc29uID0+IHtcbiAgICAgIGdldF9lbGUoICcjdXBkYXRlX3JlY29yZHMnICkuaW5uZXJIVE1MID0gSlNPTi5zdHJpbmdpZnkoIHJlc19qc29uICk7XG4gICAgfSApXG5cbn1cblxuZnVuY3Rpb24gb25SZWFkU2VsZWN0Q2hhbmdlKCBlbGVfaW4gKSB7XG4gIHZhciBpZF90b19yZWFkID0gZWxlX2luLnZhbHVlO1xuICByZWFkUmVjb3JkKCBpZF90b19yZWFkICk7XG59XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbiAoKSB7XG4gIGNvbnNvbGUubG9nKCBcImhlbGxvd29ybGRcIiApO1xuXG4gIHByZXBhcmVSZWNvcmRMaXN0KCBnZXRfZWxlKCAnI3JlYWRfcmVjb3Jkc19saXN0JyApICk7XG4gIHByZXBhcmVSZWNvcmRMaXN0KCBnZXRfZWxlKCAnI3VwZGF0ZV9yZWNvcmRzX2xpc3QnICkgKTtcbiAgcHJlcGFyZVJlY29yZExpc3QoIGdldF9lbGUoICcjZGVsZXRlX3JlY29yZHNfbGlzdCcgKSApO1xufSApOyJdfQ==